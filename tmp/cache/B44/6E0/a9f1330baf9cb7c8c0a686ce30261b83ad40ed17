o: ActiveSupport::Cache::Entry	:@compressedF:@expires_in0:@created_atf1327263690.1702125:@value[I"ð0/**
 * @name MarkerManager v3
 * @version 1.0
 * @copyright (c) 2007 Google Inc.
 * @author Doug Ricket, Bjorn Brala (port to v3), others,
 *
 * @fileoverview Marker manager is an interface between the map and the user,
 * designed to manage adding and removing many points when the viewport changes.
 * <br /><br />
 * <b>How it Works</b>:<br/> 
 * The MarkerManager places its markers onto a grid, similar to the map tiles.
 * When the user moves the viewport, it computes which grid cells have
 * entered or left the viewport, and shows or hides all the markers in those
 * cells.
 * (If the users scrolls the viewport beyond the markers that are loaded,
 * no markers will be visible until the <code>EVENT_moveend</code> 
 * triggers an update.)
 * In practical consequences, this allows 10,000 markers to be distributed over
 * a large area, and as long as only 100-200 are visible in any given viewport,
 * the user will see good performance corresponding to the 100 visible markers,
 * rather than poor performance corresponding to the total 10,000 markers.
 * Note that some code is optimized for speed over space,
 * with the goal of accommodating thousands of markers.
 */
/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 */
/**
 * @name MarkerManagerOptions
 * @class This class represents optional arguments to the {@link MarkerManager}
 *     constructor.
 * @property {Number} maxZoom Sets the maximum zoom level monitored by a
 *     marker manager. If not given, the manager assumes the maximum map zoom
 *     level. This value is also used when markers are added to the manager
 *     without the optional {@link maxZoom} parameter.
 * @property {Number} borderPadding Specifies, in pixels, the extra padding
 *     outside the map's current viewport monitored by a manager. Markers that
 *     fall within this padding are added to the map, even if they are not fully
 *     visible.
 * @property {Boolean} trackMarkers=false Indicates whether or not a marker
 *     manager should track markers' movements. If you wish to move managed
 *     markers using the {@link setPoint}/{@link setLatLng} methods, 
 *     this option should be set to {@link true}.
 */
/**
 * Creates a new MarkerManager that will show/hide markers on a map.
 *
 * Events:
 * @event changed (Parameters: shown bounds, shown markers) Notify listeners when the state of what is displayed changes.
 * @event loaded MarkerManager has succesfully been initialized.
 *
 * @constructor
 * @param {Map} map The map to manage.
 * @param {Object} opt_opts A container for optional arguments:
 *   {Number} maxZoom The maximum zoom level for which to create tiles.
 *   {Number} borderPadding The width in pixels beyond the map border,
 *                   where markers should be display.
 *   {Boolean} trackMarkers Whether or not this manager should track marker
 *                   movements.
 */
function MarkerManager(a,b){var c=this;c.map_=a,c.mapZoom_=a.getZoom(),c.projectionHelper_=new ProjectionHelperOverlay(a),google.maps.event.addListener(c.projectionHelper_,"ready",function(){c.projection_=this.getProjection(),c.initialize(a,b)})}function GridBounds(a){this.minX=Math.min(a[0].x,a[1].x),this.maxX=Math.max(a[0].x,a[1].x),this.minY=Math.min(a[0].y,a[1].y),this.maxY=Math.max(a[0].y,a[1].y)}function ProjectionHelperOverlay(a){this.setMap(a);var b=8,c=1<<b,d=7;this._map=a,this._zoom=-1,this._X0=this._Y0=this._X1=this._Y1=-1}MarkerManager.prototype.initialize=function(a,b){var c=this;b=b||{},c.tileSize_=MarkerManager.DEFAULT_TILE_SIZE_;var d=a.mapTypes,e=1;for(var f in d)if(typeof a.mapTypes.get(f)=="object"&&typeof a.mapTypes.get(f).maxZoom=="number"){var g=a.mapTypes.get(f).maxZoom;g>e&&(e=g)}c.maxZoom_=b.maxZoom||19,c.trackMarkers_=b.trackMarkers,c.show_=b.show||!0;var h;typeof b.borderPadding=="number"?h=b.borderPadding:h=MarkerManager.DEFAULT_BORDER_PADDING_,c.swPadding_=new google.maps.Size(-h,h),c.nePadding_=new google.maps.Size(h,-h),c.borderPadding_=h,c.gridWidth_={},c.grid_={},c.grid_[c.maxZoom_]={},c.numMarkers_={},c.numMarkers_[c.maxZoom_]=0,google.maps.event.addListener(a,"dragend",function(){c.onMapMoveEnd_()}),google.maps.event.addListener(a,"zoom_changed",function(){c.onMapMoveEnd_()}),c.removeOverlay_=function(a){a.setMap(null),c.shownMarkers_--},c.addOverlay_=function(a){c.show_&&(a.setMap(c.map_),c.shownMarkers_++)},c.resetManager_(),c.shownMarkers_=0,c.shownBounds_=c.getMapGridBounds_(),google.maps.event.trigger(c,"loaded")},MarkerManager.DEFAULT_TILE_SIZE_=1024,MarkerManager.DEFAULT_BORDER_PADDING_=100,MarkerManager.MERCATOR_ZOOM_LEVEL_ZERO_RANGE=256,MarkerManager.prototype.resetManager_=function(){var a=MarkerManager.MERCATOR_ZOOM_LEVEL_ZERO_RANGE;for(var b=0;b<=this.maxZoom_;++b)this.grid_[b]={},this.numMarkers_[b]=0,this.gridWidth_[b]=Math.ceil(a/this.tileSize_),a<<=1},MarkerManager.prototype.clearMarkers=function(){this.processAll_(this.shownBounds_,this.removeOverlay_),this.resetManager_()},MarkerManager.prototype.getTilePoint_=function(a,b,c){var d=this.projectionHelper_.LatLngToPixel(a,b),e=new google.maps.Point(Math.floor((d.x+c.width)/this.tileSize_),Math.floor((d.y+c.height)/this.tileSize_));return e},MarkerManager.prototype.addMarkerBatch_=function(a,b,c){var d=this,e=a.getPosition();a.MarkerManager_minZoom=b,this.trackMarkers_&&google.maps.event.addListener(a,"changed",function(a,b,c){d.onMarkerMoved_(a,b,c)});var f=this.getTilePoint_(e,c,new google.maps.Size(0,0,0,0));for(var g=c;g>=b;g--){var h=this.getGridCellCreate_(f.x,f.y,g);h.push(a),f.x=f.x>>1,f.y=f.y>>1}},MarkerManager.prototype.isGridPointVisible_=function(a){var b=this.shownBounds_.minY<=a.y&&a.y<=this.shownBounds_.maxY,c=this.shownBounds_.minX,d=c<=a.x&&a.x<=this.shownBounds_.maxX;if(!d&&c<0){var e=this.gridWidth_[this.shownBounds_.z];d=c+e<=a.x&&a.x<=e-1}return b&&d},MarkerManager.prototype.onMarkerMoved_=function(a,b,c){var d=this.maxZoom_,e=!1,f=this.getTilePoint_(b,d,new google.maps.Size(0,0,0,0)),g=this.getTilePoint_(c,d,new google.maps.Size(0,0,0,0));while(d>=0&&(f.x!==g.x||f.y!==g.y)){var h=this.getGridCellNoCreate_(f.x,f.y,d);h&&this.removeFromArray_(h,a)&&this.getGridCellCreate_(g.x,g.y,d).push(a),d===this.mapZoom_&&(this.isGridPointVisible_(f)?this.isGridPointVisible_(g)||(this.removeOverlay_(a),e=!0):this.isGridPointVisible_(g)&&(this.addOverlay_(a),e=!0)),f.x=f.x>>1,f.y=f.y>>1,g.x=g.x>>1,g.y=g.y>>1,--d}e&&this.notifyListeners_()},MarkerManager.prototype.removeMarker=function(a){var b=this.maxZoom_,c=!1,d=a.getPosition(),e=this.getTilePoint_(d,b,new google.maps.Size(0,0,0,0));while(b>=0){var f=this.getGridCellNoCreate_(e.x,e.y,b);f&&this.removeFromArray_(f,a),b===this.mapZoom_&&this.isGridPointVisible_(e)&&(this.removeOverlay_(a),c=!0),e.x=e.x>>1,e.y=e.y>>1,--b}c&&this.notifyListeners_(),this.numMarkers_[a.MarkerManager_minZoom]--},MarkerManager.prototype.addMarkers=function(a,b,c){var d=this.getOptMaxZoom_(c);for(var e=a.length-1;e>=0;e--)this.addMarkerBatch_(a[e],b,d);this.numMarkers_[b]+=a.length},MarkerManager.prototype.getOptMaxZoom_=function(a){return a||this.maxZoom_},MarkerManager.prototype.getMarkerCount=function(a){var b=0;for(var c=0;c<=a;c++)b+=this.numMarkers_[c];return b},MarkerManager.prototype.getMarker=function(a,b,c){var d=new google.maps.LatLng(a,b),e=this.getTilePoint_(d,c,new google.maps.Size(0,0,0,0)),f=new google.maps.Marker({position:d}),g=this.getGridCellNoCreate_(e.x,e.y,c);if(g!==undefined)for(var h=0;h<g.length;h++)a===g[h].getLatLng().lat()&&b===g[h].getLatLng().lng()&&(f=g[h]);return f},MarkerManager.prototype.addMarker=function(a,b,c){var d=this.getOptMaxZoom_(c);this.addMarkerBatch_(a,b,d);var e=this.getTilePoint_(a.getPosition(),this.mapZoom_,new google.maps.Size(0,0,0,0));this.isGridPointVisible_(e)&&b<=this.shownBounds_.z&&this.shownBounds_.z<=d&&(this.addOverlay_(a),this.notifyListeners_()),this.numMarkers_[b]++},GridBounds.prototype.equals=function(a){return this.maxX===a.maxX&&this.maxY===a.maxY&&this.minX===a.minX&&this.minY===a.minY?!0:!1},GridBounds.prototype.containsPoint=function(a){var b=this;return b.minX<=a.x&&b.maxX>=a.x&&b.minY<=a.y&&b.maxY>=a.y},MarkerManager.prototype.getGridCellCreate_=function(a,b,c){var d=this.grid_[c];a<0&&(a+=this.gridWidth_[c]);var e=d[a];if(!e)return e=d[a]=[],e[b]=[];var f=e[b];return f?f:e[b]=[]},MarkerManager.prototype.getGridCellNoCreate_=function(a,b,c){var d=this.grid_[c];a<0&&(a+=this.gridWidth_[c]);var e=d[a];return e?e[b]:undefined},MarkerManager.prototype.getGridBounds_=function(a,b,c,d){b=Math.min(b,this.maxZoom_);var e=a.getSouthWest(),f=a.getNorthEast(),g=this.getTilePoint_(e,b,c),h=this.getTilePoint_(f,b,d),i=this.gridWidth_[b];if(f.lng()<e.lng()||h.x<g.x)g.x-=i;h.x-g.x+1>=i&&(g.x=0,h.x=i-1);var j=new GridBounds([g,h]);return j.z=b,j},MarkerManager.prototype.getMapGridBounds_=function(){return this.getGridBounds_(this.map_.getBounds(),this.mapZoom_,this.swPadding_,this.nePadding_)},MarkerManager.prototype.onMapMoveEnd_=function(){this.objectSetTimeout_(this,this.updateMarkers_,0)},MarkerManager.prototype.objectSetTimeout_=function(a,b,c){return window.setTimeout(function(){b.call(a)},c)},MarkerManager.prototype.visible=function(){return this.show_?!0:!1},MarkerManager.prototype.isHidden=function(){return!this.show_},MarkerManager.prototype.show=function(){this.show_=!0,this.refresh()},MarkerManager.prototype.hide=function(){this.show_=!1,this.refresh()},MarkerManager.prototype.toggle=function(){this.show_=!this.show_,this.refresh()},MarkerManager.prototype.refresh=function(){this.shownMarkers_>0&&this.processAll_(this.shownBounds_,this.removeOverlay_),this.show_&&this.processAll_(this.shownBounds_,this.addOverlay_),this.notifyListeners_()},MarkerManager.prototype.updateMarkers_=function(){this.mapZoom_=this.map_.getZoom();var a=this.getMapGridBounds_();if(a.equals(this.shownBounds_)&&a.z===this.shownBounds_.z)return;a.z!==this.shownBounds_.z?(this.processAll_(this.shownBounds_,this.removeOverlay_),this.show_&&this.processAll_(a,this.addOverlay_)):(this.rectangleDiff_(this.shownBounds_,a,this.removeCellMarkers_),this.show_&&this.rectangleDiff_(a,this.shownBounds_,this.addCellMarkers_)),this.shownBounds_=a,this.notifyListeners_()},MarkerManager.prototype.notifyListeners_=function(){google.maps.event.trigger(this,"changed",this.shownBounds_,this.shownMarkers_)},MarkerManager.prototype.processAll_=function(a,b){for(var c=a.minX;c<=a.maxX;c++)for(var d=a.minY;d<=a.maxY;d++)this.processCellMarkers_(c,d,a.z,b)},MarkerManager.prototype.processCellMarkers_=function(a,b,c,d){var e=this.getGridCellNoCreate_(a,b,c);if(e)for(var f=e.length-1;f>=0;f--)d(e[f])},MarkerManager.prototype.removeCellMarkers_=function(a,b,c){this.processCellMarkers_(a,b,c,this.removeOverlay_)},MarkerManager.prototype.addCellMarkers_=function(a,b,c){this.processCellMarkers_(a,b,c,this.addOverlay_)},MarkerManager.prototype.rectangleDiff_=function(a,b,c){var d=this;d.rectangleDiffCoords_(a,b,function(b,e){c.apply(d,[b,e,a.z])})},MarkerManager.prototype.rectangleDiffCoords_=function(a,b,c){var d=a.minX,e=a.minY,f=a.maxX,g=a.maxY,h=b.minX,i=b.minY,j=b.maxX,k=b.maxY,l,m;for(l=d;l<=f;l++){for(m=e;m<=g&&m<i;m++)c(l,m);for(m=Math.max(k+1,e);m<=g;m++)c(l,m)}for(m=Math.max(e,i);m<=Math.min(g,k);m++){for(l=Math.min(f+1,h)-1;l>=d;l--)c(l,m);for(l=Math.max(d,j+1);l<=f;l++)c(l,m)}},MarkerManager.prototype.removeFromArray_=function(a,b,c){var d=0;for(var e=0;e<a.length;++e)if(a[e]===b||c&&a[e]===b)a.splice(e--,1),d++;return d},ProjectionHelperOverlay.prototype=new google.maps.OverlayView,ProjectionHelperOverlay.prototype.LngToX_=function(a){return 1+a/180},ProjectionHelperOverlay.prototype.LatToY_=function(a){var b=Math.sin(a*Math.PI/180);return 1-.5/Math.PI*Math.log((1+b)/(1-b))},ProjectionHelperOverlay.prototype.LatLngToPixel=function(a,b){var c=this._map,d=this.getProjection().fromLatLngToDivPixel(a),e={x:~~(.5+this.LngToX_(a.lng())*(2<<b+6)),y:~~(.5+this.LatToY_(a.lat())*(2<<b+6))};return e},ProjectionHelperOverlay.prototype.draw=function(){this.ready||(this.ready=!0,google.maps.event.trigger(this,"ready"))}:ET